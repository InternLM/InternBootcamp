{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some rabbits are faster than all turtles.\nPredicates:\n- F(x): x is a rabbits\n- G(y): y is a turtles\n- H(x,y): x is faster than y\n\nProblem 2: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some rabbits are faster than all turtles.", "predicates": {"F(x)": "x is a rabbits", "G(y)": "y is a turtles", "H(x,y)": "x is faster than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some students are older than all teachers.\nPredicates:\n- F(x): x is a students\n- G(y): y is a teachers\n- H(x,y): x is older than y\n\nProblem 2: Using universal domain: Some apples are organic.\nPredicates:\n- F(x): x is a apples\n- G(x): x are organic\n\nProblem 3: Using universal domain: Some apples are sweet.\nPredicates:\n- F(x): x is a apples\n- G(x): x are sweet\n\nProblem 4: Using universal domain: Some cars have turbo engines.\nPredicates:\n- F(x): x is a cars\n- G(x): x have turbo engines\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some students are older than all teachers.", "predicates": {"F(x)": "x is a students", "G(y)": "y is a teachers", "H(x,y)": "x is older than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Using universal domain: Some apples are organic.", "predicates": {"F(x)": "x is a apples", "G(x)": "x are organic"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "Using universal domain: Some apples are sweet.", "predicates": {"F(x)": "x is a apples", "G(x)": "x are sweet"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "Using universal domain: Some cars have turbo engines.", "predicates": {"F(x)": "x is a cars", "G(x)": "x have turbo engines"}, "correct_answer": "Ex(F(x)&G(x))"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 2: Using universal domain: Some rabbits run fast.\nPredicates:\n- F(x): x is a rabbits\n- G(x): x run fast\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Using universal domain: Some rabbits run fast.", "predicates": {"F(x)": "x is a rabbits", "G(x)": "x run fast"}, "correct_answer": "Ex(F(x)&G(x))"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some humans are smarter than all animals.\nPredicates:\n- F(x): x is a humans\n- G(y): y is a animals\n- H(x,y): x is smarter than y\n\nProblem 2: Symbolize: Some humans are smarter than all animals.\nPredicates:\n- F(x): x is a humans\n- G(y): y is a animals\n- H(x,y): x is smarter than y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some humans are smarter than all animals.", "predicates": {"F(x)": "x is a humans", "G(y)": "y is a animals", "H(x,y)": "x is smarter than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Symbolize: Some humans are smarter than all animals.", "predicates": {"F(x)": "x is a humans", "G(y)": "y is a animals", "H(x,y)": "x is smarter than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 2: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 2: Using universal domain: All prime numbers are greater than 2.\nPredicates:\n- F(x): x is a prime numbers\n- G(x): x are greater than 2\n\nProblem 3: Neither c nor b is F\nPredicates:\n- F(b): b has property F\n- F(c): c has property F\n\nProblem 4: Neither d nor c is F\nPredicates:\n- F(c): c has property F\n- F(d): d has property F\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Using universal domain: All prime numbers are greater than 2.", "predicates": {"F(x)": "x is a prime numbers", "G(x)": "x are greater than 2"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Neither c nor b is F", "predicates": {"F(c)": "c has property F", "F(b)": "b has property F"}, "correct_answer": "∼F(c)&∼F(b)"}, {"description": "Neither d nor c is F", "predicates": {"F(d)": "d has property F", "F(c)": "c has property F"}, "correct_answer": "∼F(d)&∼F(c)"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 2: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 3: Using universal domain: All students attend classes.\nPredicates:\n- F(x): x is a students\n- G(x): x attend classes\n\nProblem 4: Using universal domain: All prime numbers are even.\nPredicates:\n- F(x): x is a prime numbers\n- G(x): x are even\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "Using universal domain: All students attend classes.", "predicates": {"F(x)": "x is a students", "G(x)": "x attend classes"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Using universal domain: All prime numbers are even.", "predicates": {"F(x)": "x is a prime numbers", "G(x)": "x are even"}, "correct_answer": "Ax(F(x)⇒G(x))"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 2: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 3: b is both F and G\nPredicates:\n- F(b): b has property F\n- G(b): b has property G\n\nProblem 4: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 5: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "b is both F and G", "predicates": {"F(b)": "b has property F", "G(b)": "b has property G"}, "correct_answer": "F(b)&G(b)"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 2: Neither c nor d is G\nPredicates:\n- G(c): c has property G\n- G(d): d has property G\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "Neither c nor d is G", "predicates": {"G(c)": "c has property G", "G(d)": "d has property G"}, "correct_answer": "∼G(c)&∼G(d)"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: All prime numbers are greater than 2.\nPredicates:\n- F(x): x is a prime numbers\n- G(x): x are greater than 2\n\nProblem 2: Symbolize: Some humans are smarter than all animals.\nPredicates:\n- F(x): x is a humans\n- G(y): y is a animals\n- H(x,y): x is smarter than y\n\nProblem 3: Using universal domain: Some rabbits have long ears.\nPredicates:\n- F(x): x is a rabbits\n- G(x): x have long ears\n\nProblem 4: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 5: Using universal domain: All students study hard.\nPredicates:\n- F(x): x is a students\n- G(x): x study hard\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: All prime numbers are greater than 2.", "predicates": {"F(x)": "x is a prime numbers", "G(x)": "x are greater than 2"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Symbolize: Some humans are smarter than all animals.", "predicates": {"F(x)": "x is a humans", "G(y)": "y is a animals", "H(x,y)": "x is smarter than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Using universal domain: Some rabbits have long ears.", "predicates": {"F(x)": "x is a rabbits", "G(x)": "x have long ears"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Using universal domain: All students study hard.", "predicates": {"F(x)": "x is a students", "G(x)": "x study hard"}, "correct_answer": "Ax(F(x)⇒G(x))"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some students are older than all teachers.\nPredicates:\n- F(x): x is a students\n- G(y): y is a teachers\n- H(x,y): x is older than y\n\nProblem 2: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 3: Using universal domain: Some apples are sweet.\nPredicates:\n- F(x): x is a apples\n- G(x): x are sweet\n\nProblem 4: Neither d nor a is F\nPredicates:\n- F(a): a has property F\n- F(d): d has property F\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some students are older than all teachers.", "predicates": {"F(x)": "x is a students", "G(y)": "y is a teachers", "H(x,y)": "x is older than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "Using universal domain: Some apples are sweet.", "predicates": {"F(x)": "x is a apples", "G(x)": "x are sweet"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "Neither d nor a is F", "predicates": {"F(d)": "d has property F", "F(a)": "a has property F"}, "correct_answer": "∼F(d)&∼F(a)"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Neither c nor a is G\nPredicates:\n- G(a): a has property G\n- G(c): c has property G\n\nProblem 2: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Neither c nor a is G", "predicates": {"G(c)": "c has property G", "G(a)": "a has property G"}, "correct_answer": "∼G(c)&∼G(a)"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Either c is F or a is F\nPredicates:\n- F(a): a has property F\n- F(c): c has property F\n\nProblem 2: Using universal domain: All humans breathe.\nPredicates:\n- F(x): x is a humans\n- G(x): x breathe\n\nProblem 3: Either c is F or b is F\nPredicates:\n- F(b): b has property F\n- F(c): c has property F\n\nProblem 4: Neither a nor c is G\nPredicates:\n- G(a): a has property G\n- G(c): c has property G\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Either c is F or a is F", "predicates": {"F(c)": "c has property F", "F(a)": "a has property F"}, "correct_answer": "F(c)|F(a)"}, {"description": "Using universal domain: All humans breathe.", "predicates": {"F(x)": "x is a humans", "G(x)": "x breathe"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Either c is F or b is F", "predicates": {"F(c)": "c has property F", "F(b)": "b has property F"}, "correct_answer": "F(c)|F(b)"}, {"description": "Neither a nor c is G", "predicates": {"G(a)": "a has property G", "G(c)": "c has property G"}, "correct_answer": "∼G(a)&∼G(c)"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some humans are smarter than all animals.\nPredicates:\n- F(x): x is a humans\n- G(y): y is a animals\n- H(x,y): x is smarter than y\n\nProblem 2: Symbolize: Some humans are smarter than all animals.\nPredicates:\n- F(x): x is a humans\n- G(y): y is a animals\n- H(x,y): x is smarter than y\n\nProblem 3: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 4: Symbolize: Some rabbits are faster than all turtles.\nPredicates:\n- F(x): x is a rabbits\n- G(y): y is a turtles\n- H(x,y): x is faster than y\n\nProblem 5: Either c is G or b is G\nPredicates:\n- G(b): b has property G\n- G(c): c has property G\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some humans are smarter than all animals.", "predicates": {"F(x)": "x is a humans", "G(y)": "y is a animals", "H(x,y)": "x is smarter than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Symbolize: Some humans are smarter than all animals.", "predicates": {"F(x)": "x is a humans", "G(y)": "y is a animals", "H(x,y)": "x is smarter than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Symbolize: Some rabbits are faster than all turtles.", "predicates": {"F(x)": "x is a rabbits", "G(y)": "y is a turtles", "H(x,y)": "x is faster than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Either c is G or b is G", "predicates": {"G(c)": "c has property G", "G(b)": "b has property G"}, "correct_answer": "G(c)|G(b)"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: Some cars are red.\nPredicates:\n- F(x): x is a cars\n- G(x): x are red\n\nProblem 2: Using universal domain: All birds fly.\nPredicates:\n- F(x): x is a birds\n- G(x): x fly\n\nProblem 3: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 4: Using universal domain: Some cars have turbo engines.\nPredicates:\n- F(x): x is a cars\n- G(x): x have turbo engines\n\nProblem 5: Using universal domain: All prime numbers are greater than 2.\nPredicates:\n- F(x): x is a prime numbers\n- G(x): x are greater than 2\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: Some cars are red.", "predicates": {"F(x)": "x is a cars", "G(x)": "x are red"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "Using universal domain: All birds fly.", "predicates": {"F(x)": "x is a birds", "G(x)": "x fly"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Using universal domain: Some cars have turbo engines.", "predicates": {"F(x)": "x is a cars", "G(x)": "x have turbo engines"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "Using universal domain: All prime numbers are greater than 2.", "predicates": {"F(x)": "x is a prime numbers", "G(x)": "x are greater than 2"}, "correct_answer": "Ax(F(x)⇒G(x))"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 2: Using universal domain: All students attend classes.\nPredicates:\n- F(x): x is a students\n- G(x): x attend classes\n\nProblem 3: Using universal domain: Some rabbits have long ears.\nPredicates:\n- F(x): x is a rabbits\n- G(x): x have long ears\n\nProblem 4: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 5: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Using universal domain: All students attend classes.", "predicates": {"F(x)": "x is a students", "G(x)": "x attend classes"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Using universal domain: Some rabbits have long ears.", "predicates": {"F(x)": "x is a rabbits", "G(x)": "x have long ears"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 2: Using universal domain: Some apples are organic.\nPredicates:\n- F(x): x is a apples\n- G(x): x are organic\n\nProblem 3: Symbolize: Some humans are smarter than all animals.\nPredicates:\n- F(x): x is a humans\n- G(y): y is a animals\n- H(x,y): x is smarter than y\n\nProblem 4: Symbolize: Some humans are smarter than all animals.\nPredicates:\n- F(x): x is a humans\n- G(y): y is a animals\n- H(x,y): x is smarter than y\n\nProblem 5: d is both H and G\nPredicates:\n- G(d): d has property G\n- H(d): d has property H\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Using universal domain: Some apples are organic.", "predicates": {"F(x)": "x is a apples", "G(x)": "x are organic"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "Symbolize: Some humans are smarter than all animals.", "predicates": {"F(x)": "x is a humans", "G(y)": "y is a animals", "H(x,y)": "x is smarter than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Symbolize: Some humans are smarter than all animals.", "predicates": {"F(x)": "x is a humans", "G(y)": "y is a animals", "H(x,y)": "x is smarter than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "d is both H and G", "predicates": {"H(d)": "d has property H", "G(d)": "d has property G"}, "correct_answer": "H(d)&G(d)"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: All prime numbers are even.\nPredicates:\n- F(x): x is a prime numbers\n- G(x): x are even\n\nProblem 2: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 3: Using universal domain: All birds have feathers.\nPredicates:\n- F(x): x is a birds\n- G(x): x have feathers\n\nProblem 4: Symbolize: Some rabbits are faster than all turtles.\nPredicates:\n- F(x): x is a rabbits\n- G(y): y is a turtles\n- H(x,y): x is faster than y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: All prime numbers are even.", "predicates": {"F(x)": "x is a prime numbers", "G(x)": "x are even"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Using universal domain: All birds have feathers.", "predicates": {"F(x)": "x is a birds", "G(x)": "x have feathers"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Symbolize: Some rabbits are faster than all turtles.", "predicates": {"F(x)": "x is a rabbits", "G(y)": "y is a turtles", "H(x,y)": "x is faster than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: If a is G then b is G\nPredicates:\n- G(a): a has property G\n- G(b): b has property G\n\nProblem 2: Using universal domain: All prime numbers are greater than 2.\nPredicates:\n- F(x): x is a prime numbers\n- G(x): x are greater than 2\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "If a is G then b is G", "predicates": {"G(a)": "a has property G", "G(b)": "b has property G"}, "correct_answer": "G(a)⇒G(b)"}, {"description": "Using universal domain: All prime numbers are greater than 2.", "predicates": {"F(x)": "x is a prime numbers", "G(x)": "x are greater than 2"}, "correct_answer": "Ax(F(x)⇒G(x))"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: All birds fly.\nPredicates:\n- F(x): x is a birds\n- G(x): x fly\n\nProblem 2: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 3: Using universal domain: Some cars have turbo engines.\nPredicates:\n- F(x): x is a cars\n- G(x): x have turbo engines\n\nProblem 4: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: All birds fly.", "predicates": {"F(x)": "x is a birds", "G(x)": "x fly"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Using universal domain: Some cars have turbo engines.", "predicates": {"F(x)": "x is a cars", "G(x)": "x have turbo engines"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some rabbits are faster than all turtles.\nPredicates:\n- F(x): x is a rabbits\n- G(y): y is a turtles\n- H(x,y): x is faster than y\n\nProblem 2: Using universal domain: Some rabbits run fast.\nPredicates:\n- F(x): x is a rabbits\n- G(x): x run fast\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some rabbits are faster than all turtles.", "predicates": {"F(x)": "x is a rabbits", "G(y)": "y is a turtles", "H(x,y)": "x is faster than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Using universal domain: Some rabbits run fast.", "predicates": {"F(x)": "x is a rabbits", "G(x)": "x run fast"}, "correct_answer": "Ex(F(x)&G(x))"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some students are older than all teachers.\nPredicates:\n- F(x): x is a students\n- G(y): y is a teachers\n- H(x,y): x is older than y\n\nProblem 2: Symbolize: Some rabbits are faster than all turtles.\nPredicates:\n- F(x): x is a rabbits\n- G(y): y is a turtles\n- H(x,y): x is faster than y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some students are older than all teachers.", "predicates": {"F(x)": "x is a students", "G(y)": "y is a teachers", "H(x,y)": "x is older than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Symbolize: Some rabbits are faster than all turtles.", "predicates": {"F(x)": "x is a rabbits", "G(y)": "y is a turtles", "H(x,y)": "x is faster than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: All students study hard.\nPredicates:\n- F(x): x is a students\n- G(x): x study hard\n\nProblem 2: Using universal domain: All students attend classes.\nPredicates:\n- F(x): x is a students\n- G(x): x attend classes\n\nProblem 3: Symbolize: Some students are older than all teachers.\nPredicates:\n- F(x): x is a students\n- G(y): y is a teachers\n- H(x,y): x is older than y\n\nProblem 4: Using universal domain: All birds fly.\nPredicates:\n- F(x): x is a birds\n- G(x): x fly\n\nProblem 5: If c is G then d is G\nPredicates:\n- G(c): c has property G\n- G(d): d has property G\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: All students study hard.", "predicates": {"F(x)": "x is a students", "G(x)": "x study hard"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Using universal domain: All students attend classes.", "predicates": {"F(x)": "x is a students", "G(x)": "x attend classes"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Symbolize: Some students are older than all teachers.", "predicates": {"F(x)": "x is a students", "G(y)": "y is a teachers", "H(x,y)": "x is older than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Using universal domain: All birds fly.", "predicates": {"F(x)": "x is a birds", "G(x)": "x fly"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "If c is G then d is G", "predicates": {"G(c)": "c has property G", "G(d)": "d has property G"}, "correct_answer": "G(c)⇒G(d)"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: All humans breathe.\nPredicates:\n- F(x): x is a humans\n- G(x): x breathe\n\nProblem 2: Using universal domain: All humans are mortal.\nPredicates:\n- F(x): x is a humans\n- G(x): x are mortal\n\nProblem 3: If a is G then d is G\nPredicates:\n- G(a): a has property G\n- G(d): d has property G\n\nProblem 4: Symbolize: Some students are older than all teachers.\nPredicates:\n- F(x): x is a students\n- G(y): y is a teachers\n- H(x,y): x is older than y\n\nProblem 5: Neither c nor b is G\nPredicates:\n- G(b): b has property G\n- G(c): c has property G\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: All humans breathe.", "predicates": {"F(x)": "x is a humans", "G(x)": "x breathe"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Using universal domain: All humans are mortal.", "predicates": {"F(x)": "x is a humans", "G(x)": "x are mortal"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "If a is G then d is G", "predicates": {"G(a)": "a has property G", "G(d)": "d has property G"}, "correct_answer": "G(a)⇒G(d)"}, {"description": "Symbolize: Some students are older than all teachers.", "predicates": {"F(x)": "x is a students", "G(y)": "y is a teachers", "H(x,y)": "x is older than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Neither c nor b is G", "predicates": {"G(c)": "c has property G", "G(b)": "b has property G"}, "correct_answer": "∼G(c)&∼G(b)"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: Some rabbits have long ears.\nPredicates:\n- F(x): x is a rabbits\n- G(x): x have long ears\n\nProblem 2: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: Some rabbits have long ears.", "predicates": {"F(x)": "x is a rabbits", "G(x)": "x have long ears"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: All prime numbers are even.\nPredicates:\n- F(x): x is a prime numbers\n- G(x): x are even\n\nProblem 2: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 3: Using universal domain: All students attend classes.\nPredicates:\n- F(x): x is a students\n- G(x): x attend classes\n\nProblem 4: Either b is G or d is G\nPredicates:\n- G(b): b has property G\n- G(d): d has property G\n\nProblem 5: Neither a nor b is F\nPredicates:\n- F(a): a has property F\n- F(b): b has property F\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: All prime numbers are even.", "predicates": {"F(x)": "x is a prime numbers", "G(x)": "x are even"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "Using universal domain: All students attend classes.", "predicates": {"F(x)": "x is a students", "G(x)": "x attend classes"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Either b is G or d is G", "predicates": {"G(b)": "b has property G", "G(d)": "d has property G"}, "correct_answer": "G(b)|G(d)"}, {"description": "Neither a nor b is F", "predicates": {"F(a)": "a has property F", "F(b)": "b has property F"}, "correct_answer": "∼F(a)&∼F(b)"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some humans are smarter than all animals.\nPredicates:\n- F(x): x is a humans\n- G(y): y is a animals\n- H(x,y): x is smarter than y\n\nProblem 2: Using universal domain: Some turtles swim slowly.\nPredicates:\n- F(x): x is a turtles\n- G(x): x swim slowly\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some humans are smarter than all animals.", "predicates": {"F(x)": "x is a humans", "G(y)": "y is a animals", "H(x,y)": "x is smarter than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Using universal domain: Some turtles swim slowly.", "predicates": {"F(x)": "x is a turtles", "G(x)": "x swim slowly"}, "correct_answer": "Ex(F(x)&G(x))"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 2: Using universal domain: All birds fly.\nPredicates:\n- F(x): x is a birds\n- G(x): x fly\n\nProblem 3: Symbolize: Some humans are smarter than all animals.\nPredicates:\n- F(x): x is a humans\n- G(y): y is a animals\n- H(x,y): x is smarter than y\n\nProblem 4: Symbolize: Some rabbits are faster than all turtles.\nPredicates:\n- F(x): x is a rabbits\n- G(y): y is a turtles\n- H(x,y): x is faster than y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "Using universal domain: All birds fly.", "predicates": {"F(x)": "x is a birds", "G(x)": "x fly"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Symbolize: Some humans are smarter than all animals.", "predicates": {"F(x)": "x is a humans", "G(y)": "y is a animals", "H(x,y)": "x is smarter than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Symbolize: Some rabbits are faster than all turtles.", "predicates": {"F(x)": "x is a rabbits", "G(y)": "y is a turtles", "H(x,y)": "x is faster than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: a is both G and H\nPredicates:\n- G(a): a has property G\n- H(a): a has property H\n\nProblem 2: Using universal domain: All humans are mortal.\nPredicates:\n- F(x): x is a humans\n- G(x): x are mortal\n\nProblem 3: Using universal domain: All prime numbers are even.\nPredicates:\n- F(x): x is a prime numbers\n- G(x): x are even\n\nProblem 4: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 5: Using universal domain: Some rabbits run fast.\nPredicates:\n- F(x): x is a rabbits\n- G(x): x run fast\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "a is both G and H", "predicates": {"G(a)": "a has property G", "H(a)": "a has property H"}, "correct_answer": "G(a)&H(a)"}, {"description": "Using universal domain: All humans are mortal.", "predicates": {"F(x)": "x is a humans", "G(x)": "x are mortal"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Using universal domain: All prime numbers are even.", "predicates": {"F(x)": "x is a prime numbers", "G(x)": "x are even"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Using universal domain: Some rabbits run fast.", "predicates": {"F(x)": "x is a rabbits", "G(x)": "x run fast"}, "correct_answer": "Ex(F(x)&G(x))"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: d is both H and G\nPredicates:\n- G(d): d has property G\n- H(d): d has property H\n\nProblem 2: Using universal domain: Some turtles swim slowly.\nPredicates:\n- F(x): x is a turtles\n- G(x): x swim slowly\n\nProblem 3: If d is G then c is G\nPredicates:\n- G(c): c has property G\n- G(d): d has property G\n\nProblem 4: b is both H and F\nPredicates:\n- F(b): b has property F\n- H(b): b has property H\n\nProblem 5: Using universal domain: Some apples are organic.\nPredicates:\n- F(x): x is a apples\n- G(x): x are organic\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "d is both H and G", "predicates": {"H(d)": "d has property H", "G(d)": "d has property G"}, "correct_answer": "H(d)&G(d)"}, {"description": "Using universal domain: Some turtles swim slowly.", "predicates": {"F(x)": "x is a turtles", "G(x)": "x swim slowly"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "If d is G then c is G", "predicates": {"G(d)": "d has property G", "G(c)": "c has property G"}, "correct_answer": "G(d)⇒G(c)"}, {"description": "b is both H and F", "predicates": {"H(b)": "b has property H", "F(b)": "b has property F"}, "correct_answer": "H(b)&F(b)"}, {"description": "Using universal domain: Some apples are organic.", "predicates": {"F(x)": "x is a apples", "G(x)": "x are organic"}, "correct_answer": "Ex(F(x)&G(x))"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some humans are smarter than all animals.\nPredicates:\n- F(x): x is a humans\n- G(y): y is a animals\n- H(x,y): x is smarter than y\n\nProblem 2: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 3: Symbolize: Some students are older than all teachers.\nPredicates:\n- F(x): x is a students\n- G(y): y is a teachers\n- H(x,y): x is older than y\n\nProblem 4: Using universal domain: All students attend classes.\nPredicates:\n- F(x): x is a students\n- G(x): x attend classes\n\nProblem 5: If d is F then a is F\nPredicates:\n- F(a): a has property F\n- F(d): d has property F\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some humans are smarter than all animals.", "predicates": {"F(x)": "x is a humans", "G(y)": "y is a animals", "H(x,y)": "x is smarter than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "Symbolize: Some students are older than all teachers.", "predicates": {"F(x)": "x is a students", "G(y)": "y is a teachers", "H(x,y)": "x is older than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Using universal domain: All students attend classes.", "predicates": {"F(x)": "x is a students", "G(x)": "x attend classes"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "If d is F then a is F", "predicates": {"F(d)": "d has property F", "F(a)": "a has property F"}, "correct_answer": "F(d)⇒F(a)"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: All prime numbers are greater than 2.\nPredicates:\n- F(x): x is a prime numbers\n- G(x): x are greater than 2\n\nProblem 2: Using universal domain: All students attend classes.\nPredicates:\n- F(x): x is a students\n- G(x): x attend classes\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: All prime numbers are greater than 2.", "predicates": {"F(x)": "x is a prime numbers", "G(x)": "x are greater than 2"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Using universal domain: All students attend classes.", "predicates": {"F(x)": "x is a students", "G(x)": "x attend classes"}, "correct_answer": "Ax(F(x)⇒G(x))"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: All birds have feathers.\nPredicates:\n- F(x): x is a birds\n- G(x): x have feathers\n\nProblem 2: Using universal domain: All prime numbers are greater than 2.\nPredicates:\n- F(x): x is a prime numbers\n- G(x): x are greater than 2\n\nProblem 3: Using universal domain: Some rabbits run fast.\nPredicates:\n- F(x): x is a rabbits\n- G(x): x run fast\n\nProblem 4: Neither b nor d is G\nPredicates:\n- G(b): b has property G\n- G(d): d has property G\n\nProblem 5: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: All birds have feathers.", "predicates": {"F(x)": "x is a birds", "G(x)": "x have feathers"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Using universal domain: All prime numbers are greater than 2.", "predicates": {"F(x)": "x is a prime numbers", "G(x)": "x are greater than 2"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Using universal domain: Some rabbits run fast.", "predicates": {"F(x)": "x is a rabbits", "G(x)": "x run fast"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "Neither b nor d is G", "predicates": {"G(b)": "b has property G", "G(d)": "d has property G"}, "correct_answer": "∼G(b)&∼G(d)"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 2: d is both H and F\nPredicates:\n- F(d): d has property F\n- H(d): d has property H\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "d is both H and F", "predicates": {"H(d)": "d has property H", "F(d)": "d has property F"}, "correct_answer": "H(d)&F(d)"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: If a is G then d is G\nPredicates:\n- G(a): a has property G\n- G(d): d has property G\n\nProblem 2: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 3: Either b is G or a is G\nPredicates:\n- G(a): a has property G\n- G(b): b has property G\n\nProblem 4: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "If a is G then d is G", "predicates": {"G(a)": "a has property G", "G(d)": "d has property G"}, "correct_answer": "G(a)⇒G(d)"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Either b is G or a is G", "predicates": {"G(b)": "b has property G", "G(a)": "a has property G"}, "correct_answer": "G(b)|G(a)"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some students are older than all teachers.\nPredicates:\n- F(x): x is a students\n- G(y): y is a teachers\n- H(x,y): x is older than y\n\nProblem 2: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 3: If a is F then b is F\nPredicates:\n- F(a): a has property F\n- F(b): b has property F\n\nProblem 4: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some students are older than all teachers.", "predicates": {"F(x)": "x is a students", "G(y)": "y is a teachers", "H(x,y)": "x is older than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "If a is F then b is F", "predicates": {"F(a)": "a has property F", "F(b)": "b has property F"}, "correct_answer": "F(a)⇒F(b)"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 2: Using universal domain: Some turtles have hard shells.\nPredicates:\n- F(x): x is a turtles\n- G(x): x have hard shells\n\nProblem 3: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 4: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 5: b is both H and F\nPredicates:\n- F(b): b has property F\n- H(b): b has property H\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Using universal domain: Some turtles have hard shells.", "predicates": {"F(x)": "x is a turtles", "G(x)": "x have hard shells"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "b is both H and F", "predicates": {"H(b)": "b has property H", "F(b)": "b has property F"}, "correct_answer": "H(b)&F(b)"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 2: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some rabbits are faster than all turtles.\nPredicates:\n- F(x): x is a rabbits\n- G(y): y is a turtles\n- H(x,y): x is faster than y\n\nProblem 2: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 3: Using universal domain: All birds fly.\nPredicates:\n- F(x): x is a birds\n- G(x): x fly\n\nProblem 4: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 5: c is both F and G\nPredicates:\n- F(c): c has property F\n- G(c): c has property G\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some rabbits are faster than all turtles.", "predicates": {"F(x)": "x is a rabbits", "G(y)": "y is a turtles", "H(x,y)": "x is faster than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Using universal domain: All birds fly.", "predicates": {"F(x)": "x is a birds", "G(x)": "x fly"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "c is both F and G", "predicates": {"F(c)": "c has property F", "G(c)": "c has property G"}, "correct_answer": "F(c)&G(c)"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 2: Symbolize: Some rabbits are faster than all turtles.\nPredicates:\n- F(x): x is a rabbits\n- G(y): y is a turtles\n- H(x,y): x is faster than y\n\nProblem 3: Using universal domain: All students study hard.\nPredicates:\n- F(x): x is a students\n- G(x): x study hard\n\nProblem 4: Symbolize: Some rabbits are faster than all turtles.\nPredicates:\n- F(x): x is a rabbits\n- G(y): y is a turtles\n- H(x,y): x is faster than y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "Symbolize: Some rabbits are faster than all turtles.", "predicates": {"F(x)": "x is a rabbits", "G(y)": "y is a turtles", "H(x,y)": "x is faster than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Using universal domain: All students study hard.", "predicates": {"F(x)": "x is a students", "G(x)": "x study hard"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Symbolize: Some rabbits are faster than all turtles.", "predicates": {"F(x)": "x is a rabbits", "G(y)": "y is a turtles", "H(x,y)": "x is faster than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: All prime numbers are even.\nPredicates:\n- F(x): x is a prime numbers\n- G(x): x are even\n\nProblem 2: Using universal domain: All birds fly.\nPredicates:\n- F(x): x is a birds\n- G(x): x fly\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: All prime numbers are even.", "predicates": {"F(x)": "x is a prime numbers", "G(x)": "x are even"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Using universal domain: All birds fly.", "predicates": {"F(x)": "x is a birds", "G(x)": "x fly"}, "correct_answer": "Ax(F(x)⇒G(x))"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 2: Using universal domain: Some cars have turbo engines.\nPredicates:\n- F(x): x is a cars\n- G(x): x have turbo engines\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "Using universal domain: Some cars have turbo engines.", "predicates": {"F(x)": "x is a cars", "G(x)": "x have turbo engines"}, "correct_answer": "Ex(F(x)&G(x))"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 2: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 3: Symbolize: Some students are older than all teachers.\nPredicates:\n- F(x): x is a students\n- G(y): y is a teachers\n- H(x,y): x is older than y\n\nProblem 4: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 5: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "Symbolize: Some students are older than all teachers.", "predicates": {"F(x)": "x is a students", "G(y)": "y is a teachers", "H(x,y)": "x is older than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some rabbits are faster than all turtles.\nPredicates:\n- F(x): x is a rabbits\n- G(y): y is a turtles\n- H(x,y): x is faster than y\n\nProblem 2: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 3: Using universal domain: All students attend classes.\nPredicates:\n- F(x): x is a students\n- G(x): x attend classes\n\nProblem 4: Symbolize: Some rabbits are faster than all turtles.\nPredicates:\n- F(x): x is a rabbits\n- G(y): y is a turtles\n- H(x,y): x is faster than y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some rabbits are faster than all turtles.", "predicates": {"F(x)": "x is a rabbits", "G(y)": "y is a turtles", "H(x,y)": "x is faster than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "Using universal domain: All students attend classes.", "predicates": {"F(x)": "x is a students", "G(x)": "x attend classes"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Symbolize: Some rabbits are faster than all turtles.", "predicates": {"F(x)": "x is a rabbits", "G(y)": "y is a turtles", "H(x,y)": "x is faster than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some rabbits are faster than all turtles.\nPredicates:\n- F(x): x is a rabbits\n- G(y): y is a turtles\n- H(x,y): x is faster than y\n\nProblem 2: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 3: Neither c nor a is F\nPredicates:\n- F(a): a has property F\n- F(c): c has property F\n\nProblem 4: Symbolize: Some humans are smarter than all animals.\nPredicates:\n- F(x): x is a humans\n- G(y): y is a animals\n- H(x,y): x is smarter than y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some rabbits are faster than all turtles.", "predicates": {"F(x)": "x is a rabbits", "G(y)": "y is a turtles", "H(x,y)": "x is faster than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "Neither c nor a is F", "predicates": {"F(c)": "c has property F", "F(a)": "a has property F"}, "correct_answer": "∼F(c)&∼F(a)"}, {"description": "Symbolize: Some humans are smarter than all animals.", "predicates": {"F(x)": "x is a humans", "G(y)": "y is a animals", "H(x,y)": "x is smarter than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: Some rabbits run fast.\nPredicates:\n- F(x): x is a rabbits\n- G(x): x run fast\n\nProblem 2: d is both G and H\nPredicates:\n- G(d): d has property G\n- H(d): d has property H\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: Some rabbits run fast.", "predicates": {"F(x)": "x is a rabbits", "G(x)": "x run fast"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "d is both G and H", "predicates": {"G(d)": "d has property G", "H(d)": "d has property H"}, "correct_answer": "G(d)&H(d)"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: Some apples are organic.\nPredicates:\n- F(x): x is a apples\n- G(x): x are organic\n\nProblem 2: Using universal domain: All prime numbers are even.\nPredicates:\n- F(x): x is a prime numbers\n- G(x): x are even\n\nProblem 3: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 4: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: Some apples are organic.", "predicates": {"F(x)": "x is a apples", "G(x)": "x are organic"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "Using universal domain: All prime numbers are even.", "predicates": {"F(x)": "x is a prime numbers", "G(x)": "x are even"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: Some rabbits run fast.\nPredicates:\n- F(x): x is a rabbits\n- G(x): x run fast\n\nProblem 2: Neither b nor a is G\nPredicates:\n- G(a): a has property G\n- G(b): b has property G\n\nProblem 3: Using universal domain: All humans breathe.\nPredicates:\n- F(x): x is a humans\n- G(x): x breathe\n\nProblem 4: Using universal domain: Some cars are red.\nPredicates:\n- F(x): x is a cars\n- G(x): x are red\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: Some rabbits run fast.", "predicates": {"F(x)": "x is a rabbits", "G(x)": "x run fast"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "Neither b nor a is G", "predicates": {"G(b)": "b has property G", "G(a)": "a has property G"}, "correct_answer": "∼G(b)&∼G(a)"}, {"description": "Using universal domain: All humans breathe.", "predicates": {"F(x)": "x is a humans", "G(x)": "x breathe"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Using universal domain: Some cars are red.", "predicates": {"F(x)": "x is a cars", "G(x)": "x are red"}, "correct_answer": "Ex(F(x)&G(x))"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some humans are smarter than all animals.\nPredicates:\n- F(x): x is a humans\n- G(y): y is a animals\n- H(x,y): x is smarter than y\n\nProblem 2: Using universal domain: All students study hard.\nPredicates:\n- F(x): x is a students\n- G(x): x study hard\n\nProblem 3: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 4: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some humans are smarter than all animals.", "predicates": {"F(x)": "x is a humans", "G(y)": "y is a animals", "H(x,y)": "x is smarter than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Using universal domain: All students study hard.", "predicates": {"F(x)": "x is a students", "G(x)": "x study hard"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: All students study hard.\nPredicates:\n- F(x): x is a students\n- G(x): x study hard\n\nProblem 2: Using universal domain: Some apples are sweet.\nPredicates:\n- F(x): x is a apples\n- G(x): x are sweet\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: All students study hard.", "predicates": {"F(x)": "x is a students", "G(x)": "x study hard"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Using universal domain: Some apples are sweet.", "predicates": {"F(x)": "x is a apples", "G(x)": "x are sweet"}, "correct_answer": "Ex(F(x)&G(x))"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 2: Using universal domain: All students attend classes.\nPredicates:\n- F(x): x is a students\n- G(x): x attend classes\n\nProblem 3: Symbolize: Some rabbits are faster than all turtles.\nPredicates:\n- F(x): x is a rabbits\n- G(y): y is a turtles\n- H(x,y): x is faster than y\n\nProblem 4: Using universal domain: All students study hard.\nPredicates:\n- F(x): x is a students\n- G(x): x study hard\n\nProblem 5: Symbolize: Some students are older than all teachers.\nPredicates:\n- F(x): x is a students\n- G(y): y is a teachers\n- H(x,y): x is older than y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "Using universal domain: All students attend classes.", "predicates": {"F(x)": "x is a students", "G(x)": "x attend classes"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Symbolize: Some rabbits are faster than all turtles.", "predicates": {"F(x)": "x is a rabbits", "G(y)": "y is a turtles", "H(x,y)": "x is faster than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Using universal domain: All students study hard.", "predicates": {"F(x)": "x is a students", "G(x)": "x study hard"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Symbolize: Some students are older than all teachers.", "predicates": {"F(x)": "x is a students", "G(y)": "y is a teachers", "H(x,y)": "x is older than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some rabbits are faster than all turtles.\nPredicates:\n- F(x): x is a rabbits\n- G(y): y is a turtles\n- H(x,y): x is faster than y\n\nProblem 2: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some rabbits are faster than all turtles.", "predicates": {"F(x)": "x is a rabbits", "G(y)": "y is a turtles", "H(x,y)": "x is faster than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: Some cars have turbo engines.\nPredicates:\n- F(x): x is a cars\n- G(x): x have turbo engines\n\nProblem 2: If d is F then b is F\nPredicates:\n- F(b): b has property F\n- F(d): d has property F\n\nProblem 3: Using universal domain: Some turtles have hard shells.\nPredicates:\n- F(x): x is a turtles\n- G(x): x have hard shells\n\nProblem 4: Symbolize: Some students are older than all teachers.\nPredicates:\n- F(x): x is a students\n- G(y): y is a teachers\n- H(x,y): x is older than y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: Some cars have turbo engines.", "predicates": {"F(x)": "x is a cars", "G(x)": "x have turbo engines"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "If d is F then b is F", "predicates": {"F(d)": "d has property F", "F(b)": "b has property F"}, "correct_answer": "F(d)⇒F(b)"}, {"description": "Using universal domain: Some turtles have hard shells.", "predicates": {"F(x)": "x is a turtles", "G(x)": "x have hard shells"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "Symbolize: Some students are older than all teachers.", "predicates": {"F(x)": "x is a students", "G(y)": "y is a teachers", "H(x,y)": "x is older than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 2: Using universal domain: All humans breathe.\nPredicates:\n- F(x): x is a humans\n- G(x): x breathe\n\nProblem 3: Either c is F or a is F\nPredicates:\n- F(a): a has property F\n- F(c): c has property F\n\nProblem 4: Symbolize: Some students are older than all teachers.\nPredicates:\n- F(x): x is a students\n- G(y): y is a teachers\n- H(x,y): x is older than y\n\nProblem 5: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "Using universal domain: All humans breathe.", "predicates": {"F(x)": "x is a humans", "G(x)": "x breathe"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Either c is F or a is F", "predicates": {"F(c)": "c has property F", "F(a)": "a has property F"}, "correct_answer": "F(c)|F(a)"}, {"description": "Symbolize: Some students are older than all teachers.", "predicates": {"F(x)": "x is a students", "G(y)": "y is a teachers", "H(x,y)": "x is older than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Either c is G or d is G\nPredicates:\n- G(c): c has property G\n- G(d): d has property G\n\nProblem 2: Using universal domain: All birds fly.\nPredicates:\n- F(x): x is a birds\n- G(x): x fly\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Either c is G or d is G", "predicates": {"G(c)": "c has property G", "G(d)": "d has property G"}, "correct_answer": "G(c)|G(d)"}, {"description": "Using universal domain: All birds fly.", "predicates": {"F(x)": "x is a birds", "G(x)": "x fly"}, "correct_answer": "Ax(F(x)⇒G(x))"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: All humans breathe.\nPredicates:\n- F(x): x is a humans\n- G(x): x breathe\n\nProblem 2: Symbolize: Some rabbits are faster than all turtles.\nPredicates:\n- F(x): x is a rabbits\n- G(y): y is a turtles\n- H(x,y): x is faster than y\n\nProblem 3: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 4: Using universal domain: All humans are mortal.\nPredicates:\n- F(x): x is a humans\n- G(x): x are mortal\n\nProblem 5: Symbolize: Some students are older than all teachers.\nPredicates:\n- F(x): x is a students\n- G(y): y is a teachers\n- H(x,y): x is older than y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: All humans breathe.", "predicates": {"F(x)": "x is a humans", "G(x)": "x breathe"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Symbolize: Some rabbits are faster than all turtles.", "predicates": {"F(x)": "x is a rabbits", "G(y)": "y is a turtles", "H(x,y)": "x is faster than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "Using universal domain: All humans are mortal.", "predicates": {"F(x)": "x is a humans", "G(x)": "x are mortal"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Symbolize: Some students are older than all teachers.", "predicates": {"F(x)": "x is a students", "G(y)": "y is a teachers", "H(x,y)": "x is older than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 2: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProblem 3: a is both H and G\nPredicates:\n- G(a): a has property G\n- H(a): a has property H\n\nProblem 4: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}, {"description": "a is both H and G", "predicates": {"H(a)": "a has property H", "G(a)": "a has property G"}, "correct_answer": "H(a)&G(a)"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: All students study hard.\nPredicates:\n- F(x): x is a students\n- G(x): x study hard\n\nProblem 2: Using universal domain: All humans are mortal.\nPredicates:\n- F(x): x is a humans\n- G(x): x are mortal\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: All students study hard.", "predicates": {"F(x)": "x is a students", "G(x)": "x study hard"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Using universal domain: All humans are mortal.", "predicates": {"F(x)": "x is a humans", "G(x)": "x are mortal"}, "correct_answer": "Ax(F(x)⇒G(x))"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: Some rabbits run fast.\nPredicates:\n- F(x): x is a rabbits\n- G(x): x run fast\n\nProblem 2: Using universal domain: All humans are mortal.\nPredicates:\n- F(x): x is a humans\n- G(x): x are mortal\n\nProblem 3: c is both F and H\nPredicates:\n- F(c): c has property F\n- H(c): c has property H\n\nProblem 4: Neither b nor d is G\nPredicates:\n- G(b): b has property G\n- G(d): d has property G\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: Some rabbits run fast.", "predicates": {"F(x)": "x is a rabbits", "G(x)": "x run fast"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "Using universal domain: All humans are mortal.", "predicates": {"F(x)": "x is a humans", "G(x)": "x are mortal"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "c is both F and H", "predicates": {"F(c)": "c has property F", "H(c)": "c has property H"}, "correct_answer": "F(c)&H(c)"}, {"description": "Neither b nor d is G", "predicates": {"G(b)": "b has property G", "G(d)": "d has property G"}, "correct_answer": "∼G(b)&∼G(d)"}], "answer_format": "[[answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProblem 2: Neither d nor a is G\nPredicates:\n- G(a): a has property G\n- G(d): d has property G\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}, {"description": "Neither d nor a is G", "predicates": {"G(d)": "d has property G", "G(a)": "a has property G"}, "correct_answer": "∼G(d)&∼G(a)"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some humans are smarter than all animals.\nPredicates:\n- F(x): x is a humans\n- G(y): y is a animals\n- H(x,y): x is smarter than y\n\nProblem 2: Symbolize: Some students are older than all teachers.\nPredicates:\n- F(x): x is a students\n- G(y): y is a teachers\n- H(x,y): x is older than y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some humans are smarter than all animals.", "predicates": {"F(x)": "x is a humans", "G(y)": "y is a animals", "H(x,y)": "x is smarter than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Symbolize: Some students are older than all teachers.", "predicates": {"F(x)": "x is a students", "G(y)": "y is a teachers", "H(x,y)": "x is older than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some rabbits are faster than all turtles.\nPredicates:\n- F(x): x is a rabbits\n- G(y): y is a turtles\n- H(x,y): x is faster than y\n\nProblem 2: Every person has someone they love. (Domain: people)\nPredicates:\n- F(x,y): x loves y\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some rabbits are faster than all turtles.", "predicates": {"F(x)": "x is a rabbits", "G(y)": "y is a turtles", "H(x,y)": "x is faster than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Every person has someone they love. (Domain: people)", "predicates": {"F(x,y)": "x loves y"}, "correct_answer": "AxEyF(x,y)"}], "answer_format": "[[answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Using universal domain: Some cars have turbo engines.\nPredicates:\n- F(x): x is a cars\n- G(x): x have turbo engines\n\nProblem 2: Using universal domain: All humans are mortal.\nPredicates:\n- F(x): x is a humans\n- G(x): x are mortal\n\nProblem 3: Either d is F or a is F\nPredicates:\n- F(a): a has property F\n- F(d): d has property F\n\nProblem 4: Using universal domain: All students study hard.\nPredicates:\n- F(x): x is a students\n- G(x): x study hard\n\nProblem 5: No humans can fly. (Using universal domain)\nPredicates:\n- F(x): x is human\n- G(x): x can fly\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Using universal domain: Some cars have turbo engines.", "predicates": {"F(x)": "x is a cars", "G(x)": "x have turbo engines"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "Using universal domain: All humans are mortal.", "predicates": {"F(x)": "x is a humans", "G(x)": "x are mortal"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "Either d is F or a is F", "predicates": {"F(d)": "d has property F", "F(a)": "a has property F"}, "correct_answer": "F(d)|F(a)"}, {"description": "Using universal domain: All students study hard.", "predicates": {"F(x)": "x is a students", "G(x)": "x study hard"}, "correct_answer": "Ax(F(x)⇒G(x))"}, {"description": "No humans can fly. (Using universal domain)", "predicates": {"F(x)": "x is human", "G(x)": "x can fly"}, "correct_answer": "Ax(F(x)⇒∼G(x))"}], "answer_format": "[[answer;answer;answer;answer;answer]]"}}
{"data_source": "KorLogicPredicateLogicFormalization", "prompt": "In first-order logic, symbolize the following propositions using the given predicates.\nStrictly follow these notation rules:\n- Universal Quantifier: Ax (for all x)\n- Existential Quantifier: Ex (there exists x)\n- Logical Connectives: & (and), | (or), ⇒ (implies), ∼ (not)\n- Predicate format: Use capitalized letters with variables (e.g., F(x), G(x,y))\n- 0-ary predicates must use constants (e.g., F(a), G(b,c))\n\n\nProblem 1: Symbolize: Some students are older than all teachers.\nPredicates:\n- F(x): x is a students\n- G(y): y is a teachers\n- H(x,y): x is older than y\n\nProblem 2: Using universal domain: Some cars are red.\nPredicates:\n- F(x): x is a cars\n- G(x): x are red\n\nProblem 3: Using universal domain: Some turtles have hard shells.\nPredicates:\n- F(x): x is a turtles\n- G(x): x have hard shells\n\nProblem 4: Either c is F or a is F\nPredicates:\n- F(a): a has property F\n- F(c): c has property F\n\nProvide answers in [[answer1;answer2;...]] format exactly as required.", "ground_truth": {"problems": [{"description": "Symbolize: Some students are older than all teachers.", "predicates": {"F(x)": "x is a students", "G(y)": "y is a teachers", "H(x,y)": "x is older than y"}, "correct_answer": "Ex(F(x)&Ay(G(y)⇒H(x,y)))"}, {"description": "Using universal domain: Some cars are red.", "predicates": {"F(x)": "x is a cars", "G(x)": "x are red"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "Using universal domain: Some turtles have hard shells.", "predicates": {"F(x)": "x is a turtles", "G(x)": "x have hard shells"}, "correct_answer": "Ex(F(x)&G(x))"}, {"description": "Either c is F or a is F", "predicates": {"F(c)": "c has property F", "F(a)": "a has property F"}, "correct_answer": "F(c)|F(a)"}], "answer_format": "[[answer;answer;answer;answer]]"}}
